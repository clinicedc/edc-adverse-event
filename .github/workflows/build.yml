---
name: build

on: [push, pull_request]

jobs:
  test:
    name: |
      Py ${{ matrix.python-version }}, Dj ${{ matrix.django-version }}, ${{ matrix.database-engine }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12', '3.13']
        django-version: ['5.2', 'dev']
        database-engine: ['mysql', 'postgres']

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcups2-dev wamerican libpq-dev default-libmysqlclient-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/tox.txt
          pip install -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/test_utils.txt
          pip install -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/edc.txt
          pip install coverage

          if [ "${{ matrix.django-version }}" = "dev" ]; then
            pip install https://github.com/django/django/tarball/main
          else
            pip install "Django>=5.2,<5.3"
          fi

      - name: Run tests with coverage
        run: |
          echo "DATABASE_ENGINE=${{ matrix.database-engine }}" >> $GITHUB_ENV
          coverage run -a runtests.py
          coverage report
        env:
          DJANGO: ${{ matrix.django-version }}
          DATABASE_ENGINE: ${{ matrix.database-engine }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: Python ${{ matrix.python-version }}
